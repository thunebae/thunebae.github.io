<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Posts on Study With Thune</title>
    <link>https://thunebae.github.io/en/posts/</link>
    <description>Recent content in Posts on Study With Thune</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>happynguyen1902@gmail.com (thunebae)</managingEditor>
    <webMaster>happynguyen1902@gmail.com (thunebae)</webMaster>
    <copyright>¬©2022, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 20 Jul 2022 12:00:06 +0900</lastBuildDate>
    
        <atom:link href="https://thunebae.github.io/en/posts/index.xml" rel="self" type="application/rss+xml" />
    

      
      <item>
        <title>Using Federated learning for detecting malware in IoT network context.</title>
        <link>https://thunebae.github.io/en/posts/fedmalware/</link>
        <pubDate>Wed, 20 Jul 2022 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Wed, 20 Jul 2022 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/fedmalware/</guid>
        <description>Federated learning It is decentralized machine learning, where the server sends the initialization model to the clients, then the client uses the global model to train with their own data and then their local model onto the server. The server will aggregate these local models using the aggregation algorithm.
H√¨nh 1:Federated learning diagramIn my project Model: using MLP 2-layer (115,2) algorithm for training model
Aggregation algorithm at server: FedAVG (recipe below)</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.io/images/project/fed/ai.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>thunebae</category>
            
          
            
              <category>project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
      </item>
      
      <item>
        <title>CarePlus</title>
        <link>https://thunebae.github.io/en/posts/careplus/</link>
        <pubDate>Tue, 19 Jul 2022 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Tue, 19 Jul 2022 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/careplus/</guid>
        <description>Framework: Django with python Idea: Create a website to manage F0 patient at home (This project was created when my team must study at home because of Social distancing during covid epidemic)
Feature: ‚ö†Ô∏èWARNING: CarePlus has many bugs, omissions, incomplete functions. But my team has too lazy to fix and complete itFor all users: sign in, log out, edit profile (edit picture profile), health declaration
H√¨nh 1:Update profileOnly for doctor: add patient by identity card number (it&amp;rsquo;s only show in patient profile and only doctor knows it), classify patient (warning level: blue (it&amp;rsquo;s fine.</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.io/images/project/careplus/logo.svg" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>thunebae</category>
            
          
            
              <category>project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
      </item>
      
      <item>
        <title>ECC Aplication</title>
        <link>https://thunebae.github.io/en/posts/eccapp/</link>
        <pubDate>Tue, 19 Jul 2022 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Tue, 19 Jul 2022 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/eccapp/</guid>
        <description>Framework: Python with PyQt5-tools Idea It&amp;rsquo;s application just for demo (without communication through internet). For the purpose of preventing scores from leaking at server, we use AES-128 mode CBC to encrypt the data of the database and the AES key will be encrypted and exchanged by ECC.
Implement H√¨nh 1:UEIIS project graphWhen a teacher or student logs in, the public key will be downloaded from the server and use for decrypting ciphertext to score table.</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.io/images/project/ecc/post.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>thunebae</category>
            
          
            
              <category>project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
      </item>
      
      <item>
        <title>Malware assignment</title>
        <link>https://thunebae.github.io/en/posts/malware/</link>
        <pubDate>Tue, 19 Jul 2022 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Tue, 19 Jul 2022 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/malware/</guid>
        <description>Framework: pefile python Ex1 - File Infecting Virus üìë CHALL 1: Add a new sectiion in pe file or use .reloc section to contain virus (Simple MessageBox). When program start, call virus first and program run normally.Honestly it&amp;rsquo;s not a virus, it&amp;rsquo;s not contagious. It&amp;rsquo;s just an experiment on inject pe file. Maybe If I has more time to do, I think I can make it&amp;hellip;umh contagiousüò≥
üìë CHALL 2: Call hijacking - Like challenge before, but somewhere call instruction in .</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.io/images/project/malware/virus.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>thunebae</category>
            
          
            
              <category>project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
      </item>
      
      <item>
        <title>Paint Collaborator</title>
        <link>https://thunebae.github.io/en/posts/paintcollab/</link>
        <pubDate>Tue, 19 Jul 2022 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Tue, 19 Jul 2022 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/paintcollab/</guid>
        <description>Feature H√¨nh 1:Feature of Paint CollaboratorImplement H√¨nh 1:DrawH√¨nh 2:Add pictureH√¨nh 3:Shape, line and colorH√¨nh 4:Paint Collaborator for 4 clientsSource code project at Github</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.io/images/project/paintcollab/logo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>thunebae</category>
            
          
            
              <category>project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
      </item>
      
      <item>
        <title>TechBlog</title>
        <link>https://thunebae.github.io/en/posts/techblog/</link>
        <pubDate>Tue, 19 Jul 2022 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Tue, 19 Jul 2022 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/techblog/</guid>
        <description>Introduction Umh&amp;hellip;TechBlog is Technology plus Blog, so everybody can write and share their knowledges in this website
Server: Linux‚Äã
LAMP stack: Apache2, PHP, Mysql‚Äã
MVC Framework‚Äã
Program languages: PHP, HTML
Feature Register, log in, log out, update profile
Create, update, delete, view posts, pagination
Comment, count views
Upload images
H√¨nh 1:Home UISecurity method Prepared statement: prevent SQL injection
SANITIZE INPUT PHP: prevent XSS
Mode_rewrite: protect resources, prevent directory traversal</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.io/images/project/techblog/tech-logo.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>thunebae</category>
            
          
            
              <category>project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
        
          
            
              <category>Project</category>
            
          
        
      </item>
      
      <item>
        <title>DownUnderCTF 2021 REV Write-ups</title>
        <link>https://thunebae.github.io/en/posts/downunderctf/</link>
        <pubDate>Fri, 08 Oct 2021 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Fri, 08 Oct 2021 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/downunderctf/</guid>
        <description>1. No strings S·ª≠ d·ª•ng IDAPro 64-bit disassembly ra ƒëo·∫°n m√£ gi·∫£ b√™n d∆∞·ªõi, ta th·∫•y ƒë∆∞·ª£c d√≤ng s·ªë 9 l√† nh·∫≠p v√†o m·ªôt chu·ªói m√† chu·ªói n√†y ch√≠nh l√† flag c·∫ßn t√¨m.
0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 int __cdecl main(int argc, const char **argv, const char **envp) { int i; // [rsp+Ch] [rbp-64h] char s[72]; // [rsp+10h] [rbp-60h] BYREF unsigned __int64 v6; // [rsp+58h] [rbp-18h] v6 = __readfsqword(0x28u); printf(&amp;#34;flag?</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.ioimages/feature1/DUCTF.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>write-up</category>
            
          
            
              <category>DUCTF</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>RE</category>
            
          
            
              <category>rev</category>
            
          
        
        
          
            
              <category>Write-ups CTF</category>
            
          
        
        
          
            
              <category>Write-ups CTF</category>
            
          
        
      </item>
      
      <item>
        <title>Release 1</title>
        <link>https://thunebae.github.io/en/posts/release1/</link>
        <pubDate>Fri, 08 Oct 2021 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Fri, 08 Oct 2021 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/release1/</guid>
        <description>1. ES crack File: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), statically linked, with debug_info, not stripped
S·ª≠ d·ª•ng IDA pro 32-bit, t·∫≠p trung v√†o ƒëo·∫°n code sau:
H√¨nh 1:M√£ assemblyTa th·∫•y r·∫±ng ch·ªâ c·∫ßn th√™m v√†o chu·ªói c√≥ c√°c k√Ω t·ª± ƒë·∫ßu b·∫±ng v·ªõi password (0x35353450) th√¨ kh√∫c sau c√°c k√Ω t·ª± c√≥ l√† g√¨ c≈©ng kh√¥ng quan tr·ªçng.
FLAG: P445x (v·ªõi x l√† chu·ªói k√Ω t·ª± t·ª± do)</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.ioimages/feature1/workflow.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>write-up</category>
            
          
            
              <category>release1</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>RE</category>
            
          
            
              <category>rev</category>
            
          
        
        
          
            
              <category>Write-ups CTF</category>
            
          
        
        
          
            
              <category>Write-ups CTF</category>
            
          
        
      </item>
      
      <item>
        <title>Write-ups REV CTF</title>
        <link>https://thunebae.github.io/en/posts/write-up/</link>
        <pubDate>Wed, 06 Oct 2021 12:00:06 +0900</pubDate>
        <author>happynguyen1902@gmail.com (thunebae)</author>
        <atom:modified>Wed, 06 Oct 2021 12:00:06 +0900</atom:modified>
        <guid>https://thunebae.github.io/en/posts/write-up/</guid>
        <description>ImaginaryCTF-Write-up 1. stings ƒê·∫ßu ti√™n, ta ph·∫£i ki·ªÉm tra ƒë·ªãnh d·∫°ng file.
H√¨nh 1:File stingsNh∆∞ ta th·∫•y trong h√¨nh tr√™n, stings l√† file ELF 64-bit LSB pie excutetable, x86-64 =&amp;gt; s·ª≠ d·ª•ng IDApro 64-bit
Ch·∫°y th·ª≠ tr√™n m√°y ·∫£o xem c√≥ g√¨ trong tr·ªèng.
H√¨nh 2:Ch·∫°y demoFile n√†y ho√° ra l√† m·ªôt con ong th√≠ch ch∆°i tr√≤ m·∫≠t m√£. N·∫øu b·∫°n ƒëo√°n ƒë√∫ng m·∫≠t kh·∫©u th√¨ kh√¥ng b·ªã ch√≠ch.</description>
        
        <dc:creator>thunebae</dc:creator>
        <media:content url="https://thunebae.github.ioimages/feature1/mathbook.png" medium="image"><media:title type="html">featured image</media:title></media:content>
        
        
        
          
            
              <category>write-up</category>
            
          
            
              <category>CTF</category>
            
          
            
              <category>RE</category>
            
          
            
              <category>rev</category>
            
          
        
        
          
            
              <category>Write-ups CTF</category>
            
          
        
        
          
            
              <category>Write-ups CTF</category>
            
          
        
      </item>
      

    
  </channel>
</rss>
